%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Gather errors
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1
ATTR AllNT AGItf [ | | errL USE {++} {[]} : ErrL ]
%%]

%%[1
SEM Body
    | Body
        loc         .   errL        =   let ns = [ (ioccNm o >#< ppParens (ioccKind o),Just (map uoccRange os)) | (o,os) <- gamToAssocDupL @declarations.undefOccGam, not $ hsnIsProd $ ioccNm $ o ]
                                        in  (if null ns then [] else [mkErr_NamesNotIntrod' "" ns])
                                        ++ @errReorder
                                        ++ @declarations.errL

SEM Expression
    | Let
        loc         .   errL        =   @errReorder ++ @declarations.errL ++ @expression.errL
    | InfixApplicationChainTop
        loc         .   errL        =   @errRearr ++ @expression.errL

SEM RightHandSide
    | Expression
        loc         .   errL        =   @errReorder ++ @expression.errL ++ @where.errL

%%]

%%[5
SEM Qualifier
    | Let
        loc         .   errL        =   @errReorder ++ @declarations.errL
%%]

%%[9
SEM Statement
    | Let
        loc         .   errL        =   @errReorder ++ @declarations.errL

SEM Declaration
    | Class
        loc         .   errL        =   @errReorder ++ @context.errL ++ @simpletype.errL ++ @dependencies.errL ++ @where.errL
    | Instance
        loc         .   errL        =   @errReorder ++ @context.errL ++ @types.errL ++ @where.errL
%%]

%%[12
SEM Module
    | Module
        lhs         .   errL        =   firstNotEmpty [@errModName,@body.errL]
%%]

