% $Id: EHC.lag 199 2004-05-12 19:11:13Z andres $

%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Haskell importable interface to GRIN code
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8 hs import(EHCommon,UU.Pretty) export(GrAGItf(..), GrModule(..), GrExpr(..), GrBind(..), GrBindL) 
%%]

%%[8 hs export(GrAlt(..), GrAltL, GrPat(..), GrPatL, GrVal(..), GrValL, GrTag(..),GrAdapt(..),GrAdaptL,GrSplit(..),GrSplitL) 
%%]

%%[8 hs export(GrTagCateg(..),mkGrBox,mkGrTagNode,mkGrRecNode,mkGrConNode,grLclNmSupplyL) 
%%]

%%[8 hs export(mkGrPatRecNode,mkGrPatConNode) 
%%]

%%[8 hs export(GrNodeAdapt(..),grRecTag) 
%%]

%%[8 import(GrinCodeAbsSyn)
DERIVING *     : Show, Eq
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Tag categories
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8 hs
data GrTagCateg
  =  GrTagCon
  |  GrTagHole
  |  GrTagRec
  |  GrTagApp
  |  GrTagFun
  |  GrTagPApp {grtgNeeds :: Int}
  deriving (Show,Eq)

instance PP GrTagCateg where
  pp GrTagCon   = pp "C"
  pp GrTagHole  = pp "H"
  pp GrTagRec   = pp "R"
  pp GrTagApp   = pp "A"
  pp GrTagFun   = pp "F"
  pp (GrTagPApp need) = pp "P/" >|< pp need
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Row/record
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8 hs
data GrNodeAdapt = GrNodeUpd | GrNodeExt deriving (Show,Eq)

grRecTag :: GrTag
grRecTag = GrTag_Lit GrTagRec 0 hsnRec
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Name supply for local use
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8 hs
grLclNmSupplyL :: [HsName]
grLclNmSupplyL = map (\i -> HNm ("_" ++ show i)) [1..]
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Node construction
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8 hs
mkGrNode :: GrTag -> GrValL -> GrVal
mkGrNode t vL = GrVal_Node t vL

mkGrTagNode :: GrTagCateg -> Int -> HsName -> GrValL -> GrVal
mkGrTagNode c t n vL = mkGrNode (GrTag_Lit c t n) vL

mkGrConNode ::  Int -> HsName -> GrValL -> GrVal
mkGrConNode t n vL = mkGrTagNode GrTagCon t n vL -- (GrVal_LitInt (length vL) : vL)

mkGrRecNode ::  GrValL -> GrVal
mkGrRecNode vL = mkGrTagNode GrTagRec 0 hsnRec vL -- (GrVal_LitInt (length vL) : vL)

mkGrBox :: HsName -> GrVal -> GrVal
mkGrBox tyNm v = mkGrConNode 0 tyNm [v]

mkGrPatTagNode :: GrTagCateg -> Int -> HsName -> [HsName] -> GrPat
mkGrPatTagNode c t n pL = GrPat_Node (GrTag_Lit c t n) pL

mkGrPatConNode :: Int -> HsName -> [HsName] -> GrPat
mkGrPatConNode t n pL = mkGrPatTagNode GrTagCon t n pL

mkGrPatRecNode :: [HsName] -> GrPat
mkGrPatRecNode pL = mkGrPatTagNode GrTagRec 0 hsnRec pL
%%]


