% $Id$

%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred gathering
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR NTPrf [ | | gathPredL USE {++} {[]}: {[PredOcc]} ]

SEM Expr
  | IConst CConst Var Con
                lhs         .   gathPredL           =   foPredOccL @fo
  | App         lhs         .   gathPredL           =   @prOccL ++ @func.gathPredL ++ @arg.gathPredL
%%]

%%[10
SEM Expr
  | Sel         loc         .   prUid               =   mkPrId @lhs.prfCtxtId @lUniq2
                lhs         .   gathPredL           =   [PredOcc (Pred_Lacks (tyRecRow @recTy) @lbl) @prUid] ++ @expr.gathPredL
  | Rec         lhs         .   gathPredL           =   foPredOccL @fo ++ @recExpr.gathPredL

SEM RecExpr
  | Ext         loc         .   prUid               =   mkPrId @lhs.prfCtxtId @lUniq3
  | Upd         loc         .   prUid               =   mkPrId @lhs.prfCtxtId @lUniq4
  | Ext Upd     lhs         .   gathPredL           =   [PredOcc (Pred_Lacks (tyRecRow @recTy) @nm) @prUid] ++ @recExpr.gathPredL ++ @expr.gathPredL

SEM RecPatExpr
  | Ext         loc         .   prUid               =   mkPrId @lhs.prfCtxtId @lUniq3
                lhs         .   gathPredL           =   [PredOcc (Pred_Lacks (tyRecRow @knRecTy) @nm) @prUid] ++ @recPatExpr.gathPredL ++ @patExpr.gathPredL
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred gathering (tgam version)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR NTPrf [ | | gath2PredL USE {++} {[]}: {[PredOcc]} ]

SEM Expr
  | IConst CConst Var Con
                lhs         .   gath2PredL          =   foPredOccL @fo
  | App         lhs         .   gath2PredL          =   @prOccL ++ @func.gath2PredL ++ @arg.gath2PredL
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred resolution for super classes of instance
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Decl
  | Instance    loc         .   (instPrElimGam,ctxtArgNmL,prUIDL)
                                                    =   peGamAddKnPrL @prfCtxtId @lUniq6 @ctxtPrFixL @lhs.prElimGam
                            .   supPrUIDL           =   map (mkPrId @prfCtxtId) . mkNewUIDL (length @supPrTyL) $ @lUniq4
                            .   supPrElimGam        =   peGamDel @instClsNm @elimRule @instPrElimGam
                            .   declsPrElimGam      =   peGamDel @instClsNm @elimRule @instPrElimGam
                            .   (supPrfCBindLMap,supCSubst,supRemPrfPrL,supEvidL,supPrfErrs,(dbgPrfG1,dbgPrfPruneG1,dbgPrfTr1))
                                                    =   prfPreds @lUniq5 (emptyFE {fePrElimGam = @supPrElimGam}) (zipWith PredOcc (map tyPred @supPrTyL) @supPrUIDL)
                decls       .   prElimGam           =   @declsPrElimGam
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred resolution for super classes of instance (tgam version)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Decl
  | Instance    loc         .   (instPrElimTGam,_,_)
                                                    =   peTGamAddKnPrL @prfCtxtId @lUniq6 @ctxtPrFixL (tgamPushNew @lhs.prfCtxtId @prfCtxtId @lhs.prElimTGam)
                            .   supPrElimTGam       =   peTGamDel @prfCtxtId @instClsNm @elimRule @instPrElimTGam
                            .   declsPrElimTGam     =   peTGamDel @prfCtxtId @instClsNm @elimRule @instPrElimTGam
                decls       .   prElimTGam          =   @declsPrElimTGam
                lhs         .   prElimTGam          =   @lhs.prElimTGam
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred resolution for expressions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Expr
  | LamImpl     loc         .   prElimGam           =   peGamAddKnPr @arg.topNm @knPrUid @knPr (gamPushNew @lhs.prElimGam)
  | AppTop Lam  loc         .   prElimGam           =   foldr (\p g -> peGamAddKnPr (poiHNm (poPrId p)) (poPrId p) (poPr p) g) (gamPushNew @lhs.prElimGam) @knPrL
  | Let         decls       .   patPrElimGam        =   emptyGam
                loc         .   prElimGam           =   @lhs.prElimGam `gamPushGam` @decls.patPrElimGam
%%]

%%[9
SEM Expr
  | Let         loc         .   gathSubsPredL       =   @decls.tyCnstr |=> @decls.gathPredL
                            .   gathBodySubsPredL   =   @body.tyCnstr |=> @body.gathPredL
                            .   (prfCBindLMap,csubst,remPrfPrL,_,prfErrs,(dbgPrfG1,dbgPrfPruneG1,dbgPrfTr1))
                                                    =   prfPreds @lUniq4 (emptyFE {fePrElimGam = @prElimGam}) @gathSubsPredL
                            .   (bodyPrfCBindLMap,bodyCSubst,bodyRemPrfPrL,_,bodyPrfErrs,(dbgPrfG2,dbgPrfPruneG2,dbgPrfTr2))
                                                    =   prfPreds @lUniq5 (emptyFE {fePrElimGam = @prElimGam}) @gathBodySubsPredL
                            .   quantPrIdSet        =   unionManySets
                                                        . map (unionManySets . map (maybe emptySet fst . lookupFM @prfCBindLMap) . setToList . tqoInsPrIdSet)
                                                        . gamElts $ @tqoGam
                            .   gathPredL           =   filter (not . (`elementOf` @quantPrIdSet) . poPrId) @remPrfPrL ++ @bodyRemPrfPrL
                lhs         .   gathPredL           =   @gathPredL
  | AppTop      loc         .   imSubsTy            =   @imTy
                            .   gathSubsPredL       =   @expr.tyCnstr |=> @expr.gathPredL
                            .   (inKnGathPrL,remGathPrL)
                                                    =   partition  (\p -> any (`elem` ftv @knPrL) (ftv p)) @gathSubsPredL
  | Lam         loc         .   imSubsTy            =   foCnstr @foKnFun |=> @imTy
  | Lam LamImpl loc         .   gathSubsPredL       =   @body.tyCnstr |=> @body.gathPredL
                            .   (inKnGathPrL,remGathPrL)
                                                    =   partition  (\p -> let fv = ftv p
                                                                          in  null fv || any (`elem` ftv @knPrL) fv
                                                                   )
                                                                   @gathSubsPredL
  | LamImpl     loc         .   knPr                =   tyPred . (@body.tyCnstr |=>) $ @knArgImpl
                            .   knPrUid             =   mkPrId @prfCtxtId @lUniq
                            .   knPrL               =   [PredOcc @knPr @knPrUid]
                            .   prfFE               =   emptyFE {fePrElimGam = @prElimGam, feDontBind = ftv @knPr}
  | AppTop Lam  loc         .   (knPrL,knImplsTl)   =   implsPredsTail . tyImpls $ @imSubsTy
                            .   prfFE               =   emptyFE {fePrElimGam = @prElimGam}
  | AppTop Lam LamImpl
                loc         .   (prfCBindLMap,csubst,remPrfPrL,_,prfErrs,(dbgPrfG,dbgPrfPruneG,dbgPrfTr))
                                                    =   prfPreds @lUniq3 @prfFE @inKnGathPrL
                            .   gathPredL           =   @remPrfPrL ++ @remGathPrL

SEM Decl
  | Instance    loc         .   gathSubsPredL       =   @decls.tyCnstr |=> @decls.gathPredL
                            .   (prfCBindLMap,csubst,remPrfPrL,_,prfErrs,(dbgPrfG2,dbgPrfPruneG2,dbgPrfTr2))
                                                    =   prfPreds @lUniq7 (emptyFE {fePrElimGam = @declsPrElimGam}) @gathSubsPredL
                lhs         .   gathPredL           =   []
%%]
  | Lam LamImpl loc         .   gathSubsPredL       =   @body.tyCnstr |=> (@arg.gathPredL ++ @body.gathPredL)
                            .   (inKnGathPrL,remGathPrL)
                                                    =   (@gathSubsPredL,[])
  | Lam LamImpl loc         .   gathSubsPredL       =   @body.tyCnstr |=> (@arg.gathPredL ++ @body.gathPredL)
                            .   (inKnGathPrL,remGathPrL)
                                                    =   partition  (\p -> let fv = ftv p
                                                                          in  null fv || any (`elem` ftv @knPrL) fv
                                                                   )
                                                                   @gathSubsPredL

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred resolution for expressions (tgam version)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Expr
  | LamImpl     loc         .   lPrElimTGam         =   peTGamAddKnPr @prfCtxtId @arg.topNm @knPrUid @knPr (tgamPushNew @lhs.prfCtxtId @prfCtxtId @lhs.prElimTGam)
  | AppTop Lam  loc         .   lPrElimTGam         =   foldr  (\p g -> peTGamAddKnPr @prfCtxtId (poiHNm (poPrId p)) (poPrId p) (poPr p) g)
                                                               (tgamPushNew @lhs.prfCtxtId @prfCtxtId @lhs.prElimTGam) @knPrL
  | Let         decls       .   patPrElimTGam       =   emptyTGam @prfCtxtId
                loc         .   lPrElimTGam         =   tgamPushGam @lhs.prfCtxtId @prfCtxtId @prfCtxtId @lhs.prElimTGam @decls.patPrElimTGam
%%]

%%[9
SEM Expr
  | Let         decls       .   prElimTGam          =   @lPrElimTGam
  | AppTop      expr        .   prElimTGam          =   @lPrElimTGam
  | Lam LamImpl
                body        .   prElimTGam          =   @lPrElimTGam
%%]

%%[9
SEM Expr
  | LamImpl     loc         .   prf2FE              =   emptyFE {fePrElimTGam = @body.prElimTGam, feDontBind = ftv @knPr}
  | Lam         loc         .   prf2FE              =   emptyFE {fePrElimTGam = @body.prElimTGam}
  | AppTop      loc         .   prf2FE              =   emptyFE {fePrElimTGam = @expr.prElimTGam}
%%]

%%[9
SEM Expr
  | Let         loc         .   gath2SubsPredL      =   @decls.tyCnstr |=> @decls.gath2PredL
                            .   gath2BodySubsPredL  =   @body.tyCnstr |=> @body.gath2PredL
%%]

%%[9
SEM Expr
  | Let         loc         .   (_,prfPoiBackMp,_,(dbg2PrfG,dbg2PrfPruneG,dbg2PrfOrG,dbg2PrLeaves,_))
                                                    =   prf2Preds @lUniq4 (emptyFE {fePrElimTGam = @decls.prElimTGam}) @gath2SubsPredL
                            .   (_,_,_,(dbg2PrfG2,_,_,_,_))
                                                    =   prf2Preds @lUniq5 (emptyFE {fePrElimTGam = @body.prElimTGam}) @gath2BodySubsPredL
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Predicate proving context identifier
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR NTPrf [ prfCtxtId: PrfCtxtId | | ]

SEM Expr
  | Let AppTop Lam LamImpl
                loc         .   prfCtxtId           =   @lUniq

SEM Decl
  | Instance Class
                loc         .   prfCtxtId           =   @lUniq

SEM AGItf
  | AGItf       loc         .   prfCtxtId           =   @lUniq
%%]
SEM Expr
  | Let AppTop Lam LamImpl AppImpl
                loc         .   prfCtxtId           =   @lUniq

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% All PrfCtxtId's gathered
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR NTPrf [ | | allPrfCtxtId USE {`Set.union`} {emptySet} : {Set PrfCtxtId} ]

SEM Expr
  | Let         loc         .   allPrfCtxtId        =   unionManySets [@body.allPrfCtxtId,@decls.allPrfCtxtId] `addToSet` @prfCtxtId
  | AppTop      loc         .   allPrfCtxtId        =   unionManySets [@expr.allPrfCtxtId] `addToSet` @prfCtxtId
  | Lam LamImpl
                loc         .   allPrfCtxtId        =   unionManySets [@body.allPrfCtxtId] `addToSet` @prfCtxtId

SEM Decl
  | Instance Class
                loc         .   allPrfCtxtId        =   emptySet
%%]
  | AppImpl     loc         .   allPrfCtxtId        =   unionManySets [@func.allPrfCtxtId,@arg.allPrfCtxtId] `addToSet` @prfCtxtId

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Passing back additional bindings using a pred
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR NTPrf [ cbindLMap: CBindLMap | | ]

SEM AGItf
  | AGItf       loc         .   cbindLMap           =   emptyCBindLMap

SEM Expr
  | Lam Let AppTop LamImpl
                loc         .   cbindLMap           =   @lhs.cbindLMap `plusFM` @prfCBindLMap
  | Let         body        .   cbindLMap           =   @lhs.cbindLMap
%%]

SEM AGItf
  | AGItf       loc         .   cbindLMap           =   @prfCBindLMap

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Passing back code substitution
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR AllNT [ cSubst: CSubst | | ]

SEM AGItf
  | AGItf       loc         .   cSubst              =   emptyCSubst

SEM Decl
  | Instance    loc         .   cSubst              =   @lhs.cSubst `cAppSubst` @supCSubst `cAppSubst` @csubst

SEM Expr
  | Let         loc         .   cSubst              =   cnstrImplsToCSubst @tqoTyCnstr `cAppSubst` @lhs.cSubst `cAppSubst` @bodyCSubst `cAppSubst` @csubst
  | Lam AppTop  loc         .   cSubst              =   (poiCExprLToCSubst . map (\i -> (i,CExpr_Var (poiHNm i))) $ (@uidLKnHd ++ @uidLKnTl))
                                                            `cAppSubst` @lhs.cSubst `cAppSubst` @csubst
  | LamImpl     loc         .   cSubst              =   @lhs.cSubst `cAppSubst` @csubst
%%]

SEM AGItf
  | AGItf       loc         .   cSubst              =   cnstrImplsToCSubst @expr.tyCnstr `cAppSubst` @csubst

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% UID's of known predicates
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Expr
  | Lam AppTop  loc         .   uidLKnHd            =   implsPrIds @implsKnHd
                            .   uidLKnTl            =   implsPrIds @implsKnTl
                            .   knPrUidL            =   @uidLKnHd ++ @uidLKnTl
  | LamImpl     loc         .   knPrUidL            =   [@knPrUid]
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Coercions resulting from pred usage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Expr
  | App         loc         .   appImplsCoeL        =   mkImplsAppCoe . tyImpls . (@lhs.finTyCnstr |=>) $ @imTy
  | AppImpl     loc         .   appImplsCoeL        =   []
  | Lam AppTop  loc         .   implsKnHd           =   tyImpls @imSubsTy
                            .   implsKnTl           =   @lhs.finTyCnstr |=> @knImplsTl
  | Lam LamImpl loc         .   lamBodyCoeL         =   mkLamBodyCoe
                                                                (mkCoe (\e -> rceMatch (RCEEnv @lhs.valGam @lhs.tyGam) [@arg.topNm] [CAlt_Alt [@arg.cpat] e] cvarUndefined))
                                                                @body.appArgCoeL
  | Lam         loc         .   lamArgCoeL          =   mkImplsLamCoe (mkLetRecCoe (mkCBindLForUIDL @cbindLMap (`elem` @uidLKnHd))) @implsKnHd
                                                        ++ mkImplsLamCoe (mkLetRecCoe (mkCBindLForUIDL @cbindLMap (`elem` @uidLKnTl))) @implsKnTl
                                                        ++ [mkLamCoe @arg.topNm]
  | LamImpl     loc         .   lamArgCoeL          =   [mkLamCoe @arg.topNm `coeCompose` mkLetRecCoe (mkCBindLForUIDL @prfCBindLMap (`elem` @knPrUidL))]
  | AppTop      loc         .   lamArgCoeL          =   mkImplsLamCoe
                                                            (mkLetRecCoe (mkCBindLForUIDL @cbindLMap (`elem` @knPrUidL)))
                                                            (@lhs.finTyCnstr |=> @implsKnHd)
%%]

