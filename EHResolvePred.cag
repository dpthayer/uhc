% $Id: EHC.lag 199 2004-05-12 19:11:13Z andres $

%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred gathering
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR AllNT [ | | gathPredL USE {++} {[]}: {[PredOcc]} ]

SEM Expr
  | IConst CConst Var Con
                lhs         .   gathPredL           =   foPredOccL @fo
  | App         lhs         .   gathPredL           =   @prOccL ++ @func.gathPredL ++ @arg.gathPredL
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Pred resolution
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Expr
  | Let         loc         .   gathSubsPredL       =   @decls.tyCnstr |=> @decls.gathPredL
                            .   (prfCBindLMap,csubst,remPrfPrL,_,prfErrs)
                                                    =   prfPreds @lUniq4 (emptyFE {fePrElimGam = @prElimGam}) @gathSubsPredL
                            .   gathPredL           =   let  usedPrIds = unionManySets . map tqoInsPrIdSet . gamValues $ @tqoGam
                                                        in   filter (not . (`elementOf` usedPrIds) . poId) @remPrfPrL
                lhs         .   gathPredL           =   @gathPredL ++ @body.gathPredL
  | AppTop      loc         .   imSubsTy            =   @expr.tyCnstr |=> @imTy
                            .   gathSubsPredL       =   @expr.tyCnstr |=> @expr.gathPredL
  | Lam         loc         .   imSubsTy            =   @body.tyCnstr |=> @imTy
                            .   gathSubsPredL       =   @body.tyCnstr |=> @body.gathPredL
  | AppTop Lam  loc         .   (knPrL,knImplsTl)   =   implsPredsTail . tyImpls $ @imSubsTy
                            .   (inKnGathPrL,remGathPrL)
                                                    =   partition  (\p -> let fv = ftv p
                                                                          in  null fv || any (`elem` ftv @knPrL) fv
                                                                   )
                                                                   @gathSubsPredL
                            .   prElimGam           =   foldr (\p g -> peGamAddKnPr (uidHNm (poId p)) (poId p) (poPr p) g) @lhs.prElimGam @knPrL
                            .   (prfCBindLMap,csubst,remPrfPrL,_,prfErrs)
                                                    =   prfPreds @lUniq3 (emptyFE {fePrElimGam = @prElimGam}) @inKnGathPrL
                            .   gathPredL           =   @remPrfPrL ++ @remGathPrL
  | Let Lam     loc         .   cbindL              =   concat (eltsFM @prfCBindLMap)
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Passing back additional bindings using a pred
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR AllDecl AllCase AllExpr [ cbindLMap: CBindLMap | | ]

SEM AGItf
  | AGItf       loc         .   cbindLMap           =   emptyFM

SEM Expr
  | Lam Let AppTop
                loc         .   cbindLMap           =   @lhs.cbindLMap `plusFM` @prfCBindLMap
  | Let         body        .   cbindLMap           =   @lhs.cbindLMap
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Passing back code substitution
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
ATTR AllNT [ cSubst: CSubst | | ]

SEM AGItf
  | AGItf       loc         .   cSubst              =   cnstrImplsToCSubst @expr.tyCnstr

SEM Expr
  | Let         loc         .   cSubst              =   cnstrImplsToCSubst @tqoTyCnstr `cAppSubst` @lhs.cSubst `cAppSubst` @csubst
  | Lam AppTop  loc         .   cSubst              =   (assocLCExprToCSubst . map (\i -> (i,CExpr_Var (uidHNm i))) $ (@uidLKnHd ++ @uidLKnTl))
                                                            `cAppSubst` @lhs.cSubst `cAppSubst` @csubst
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Coercions resulting from pred usage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[9
SEM Expr
  | App         loc         .   appImplsCoeL        =   mkImplsAppCoe . tyImpls . (@lhs.finTyCnstr |=>) $ @imTy
  | Lam AppTop  loc         .   implsKnHd           =   tyImpls @imSubsTy
                            .   implsKnTl           =   @lhs.finTyCnstr |=> @knImplsTl
                            .   uidLKnHd            =   implsUIDs @implsKnHd
                            .   uidLKnTl            =   implsUIDs @implsKnTl
  | Lam         loc         .   lamBodyCoeL         =   mkLamBodyCoe
                                                                (mkCoe (\e -> rceMatch [@arg.topNm] [CAlt_Alt [@arg.cpat] e] cvarUndefined))
                                                                @body.appArgCoeL
                            .   lamArgCoeL          =   mkImplsLamCoe (mkLetRecCoe (mkCBindLForUIDL @cbindLMap @uidLKnHd)) @implsKnHd
                                                        ++ mkImplsLamCoe (mkLetRecCoe (mkCBindLForUIDL @cbindLMap @uidLKnTl)) @implsKnTl
                                                        ++ [mkLamCoe @arg.topNm]
  | AppTop      loc         .   lamArgCoeL          =   mkImplsLamCoe
                                                            (mkLetRecCoe (mkCBindLForUIDL @cbindLMap (@uidLKnHd ++ @uidLKnTl)))
                                                            (@lhs.finTyCnstr |=> @implsKnHd)
%%]

