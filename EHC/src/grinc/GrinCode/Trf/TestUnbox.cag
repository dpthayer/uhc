%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Unbox Int and Char
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8 import({GrinCode/AbsSyn})
%%]

%%[8 hs module {%{GRIN}GrinCode.Trf.TestUnbox}
%%]

%%[8 hs import({%{EH}Base.Common}, {%{EH}Base.Builtin}, {%{GRIN}GRINCCommon}, {%{EH}GrinCode})
%%]

%%[8 hs export(testUnbox)
testUnbox :: GrModule -> GrModule
testUnbox grmod 
  = let t = wrap_GrAGItf (sem_GrAGItf (GrAGItf_AGItf grmod))
                         (Inh_GrAGItf)
    in trf_Syn_GrAGItf t
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Wrapper
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8.wrapper
WRAPPER GrAGItf
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Transformation: insert a test for boxedness before each  FetchField x 0
%%% if there are #U tags in the alternatives of the case
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8
ATTR GrAGItf [ | | trf: GrModule ]
ATTR AllNT [ | | trf: SELF ]
%%]

%%[8

ATTR GrExpr [ | | isFetchTag: {Bool}   
                  getName: {HsName}  
                  isCaseHavingUnboxies: {Bool} 
                  startsWithCaseHavingUnboxies: {Bool} 
                  getExpr: {GrExpr}
                  getPat: {GrPat}
                  getBody: {GrExpr}
            ] 
            
ATTR GrAlt GrAltL [  | | hasUnboxies USE {||} {False} : {Bool} ]

ATTR GrPat GrTag [ | | isUnboxy: {Bool} ]


SEM GrExpr
  | FetchField     lhs . isFetchTag   =  @offset == 0
                   lhs . getName      =  @nm
  | * - FetchField lhs . isFetchTag   =  False
                   lhs . getName      =  error "TestUnox.cag: getName taken from non-FetchField"

SEM GrExpr
  | Seq            loc . original     =  GrExpr_Seq @expr.trf @pat.trf @body.trf
                   loc . newcase      =  \e -> GrExpr_Case (GrVal_Var @expr.getName)
                                                           [ GrAlt_Alt (GrPat_Tag GrTag_Unboxed) (GrExpr_Unit (GrVal_Node GrTag_Unboxed [GrVal_Var @expr.getName]))
                                                           , GrAlt_Alt (GrPat_Tag GrTag_Any    ) (GrExpr_Seq @expr.trf @pat.trf e)
                                                           ]
                   lhs . trf          =  if @expr.isFetchTag && @body.startsWithCaseHavingUnboxies
                                         then GrExpr_Seq (@loc.newcase @body.getExpr) @body.getPat @body.getBody
                                         else if @expr.isFetchTag && @body.isCaseHavingUnboxies
                                              then @loc.newcase @body.trf
                                              else @loc.original
                                         
  | Seq            lhs . startsWithCaseHavingUnboxies = @expr.isCaseHavingUnboxies
  | Case           lhs . startsWithCaseHavingUnboxies = @loc.isCaseHavingUnboxies
  | * - Seq Case   lhs . startsWithCaseHavingUnboxies = False
  
  | Case           loc . isCaseHavingUnboxies = @altL.hasUnboxies
  | * - Case       loc . isCaseHavingUnboxies = False
  
  | Seq            lhs . getExpr = @expr.trf
                   lhs . getPat = @pat.trf
                   lhs . getBody = @body.trf
                   
  | * - Seq        lhs . getExpr = error "getExpr from non-Seq"
                   lhs . getPat  = error "getPat from non-Seq"
                   lhs . getBody = error "getBody from non-Seq"
  
SEM GrAlt
  | Alt            loc . hasUnboxies = @pat.isUnboxy
 
SEM GrPat          
  | Tag            lhs . isUnboxy = @tag.isUnboxy
  | * - Tag        lhs . isUnboxy = False
  
SEM GrTag
  | Unboxed        lhs . isUnboxy = True
  | * - Unboxed    lhs . isUnboxy = False
  

SEM GrAltL
  | Nil            lhs . trf = []
  | Cons           lhs . trf = if @hd.hasUnboxies
                               then @tl.trf
                               else @hd.trf : @tl.trf



 
%%]
