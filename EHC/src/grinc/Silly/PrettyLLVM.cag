%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%[8 hs module {%{GRIN}Silly.PrettyLLVM} import(EH.Util.Pretty, {%{GRIN}GRINCCommon} hiding (Variable(..)),{%{GRIN}Silly}) export(prettyLLVM)
%%]
%%[8 hs import({%{EH}Base.Opts})
%%]
%%[8 hs import({%{EH}Base.Common})
%%]
%%[8 import({Silly/AbsSyn})
%%]

%%[8 hs
prettyLLVM :: EHCOpts -> SilModule -> PP_Doc
prettyLLVM _ silmod
  = let t = wrap_SilModule (sem_SilModule silmod) 
                           (Inh_SilModule { })
     in  code_Syn_SilModule t
%%]

%%[8

WRAPPER SilModule

ATTR SilModule [ | | code : PP_Doc ]

--------------------------------------------------------------------------------
-- MODULE GENERATION
--------------------------------------------------------------------------------

SEM SilModule
  | SilModule   lhs.code  = text (show @constants)
  
%%]
