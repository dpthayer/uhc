%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Haskell importable interface to Foreign extraction info
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[doesWhat doclatex
Extract various info out of the FFI declaration:
\begin{itemize}
\item files to include, whatever that means for a calling convention.
\item entity name itself.
\item options: is it a pointer to something (instead of something to call), is it static.
\end{itemize}
%%]

%%[90 hs module {%{EH}Foreign.Extract} import({%{EH}Base.Common},{%{EH}Foreign}) 
%%]

%%[90 hs import(Data.Maybe) 
%%]

%%[90.WRAPPER ag import({Foreign/AbsSyn})
WRAPPER ForeignAGItf
%%]

%%[90 hs export(ForeignExtraction(..))
-- | all relevant info for all calling conventions is gathered in one place, for backends to choose from
data ForeignExtraction
  = ForeignExtraction
      { forextractIncludes      :: ![String]            -- ccall: include files
      , forextractEnt           :: !String              -- all: name of function/...
      , forextractMbKnownPrim   :: !(Maybe KnownPrim)   -- prim: known semantics
      , forextractMbThisArgNr   :: !(Maybe Int)         -- jscript: which arg acts as this/receiver of call
      , forextractMbIndexArgNr  :: !(Maybe Int)         -- jscript: combination with indexing an array
      , forextractOptIsStatic   :: !Bool                -- ccall: static
      , forextractOptIsPtr      :: !Bool                -- ccall: pointer
      , forextractForeignExpr	:: !ForeignExpr			-- the AST for building the FFI call in terms of the target language (20101020 AD: soon replaces flags above)
      }

emptyForeignExtraction = ForeignExtraction [] "??" Nothing Nothing Nothing False False (ForeignExpr_Call ForeignExpr_Ent)
%%]

%%[90 hs export(foreignEntExtract)
foreignEntExtract :: ForeignEnt -> ForeignExtraction
foreignEntExtract ty
  =  let  t =  wrap_ForeignAGItf
                 (sem_ForeignAGItf (ForeignAGItf_AGItf ty))
                 Inh_ForeignAGItf
     in   extr_Syn_ForeignAGItf t
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Foreign entity, extraction of info from calling convention specific AST
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[90
ATTR ForeignAGItf AllForeign [ | | extr: ForeignExtraction ]

SEM JScriptCall
  | Id          lhs     .   extr    =   emptyForeignExtraction
                                            { forextractEnt             = @nm
                                            {-
                                            , forextractOptIsPtr        = @asPointer
                                            , forextractMbThisArgNr     = @mbThisArgNr
                                            , forextractMbIndexArgNr	= @mbIndexArgNr
                                            -}
                                            {-
                                            -}
                                            , forextractForeignExpr		= maybe (forextractForeignExpr emptyForeignExtraction) id @mbForeignExpr
                                            }

SEM PrimCall
  | Id          lhs     .   extr    =   emptyForeignExtraction
                                            { forextractEnt             = @nm
                                            , forextractMbKnownPrim     = @mbKnownPrim
                                            }

SEM PlainCall
  | Id          lhs     .   extr    =   emptyForeignExtraction
                                            { forextractEnt             = @nm
                                            }

SEM CCall
  | Id          lhs     .   extr    =   emptyForeignExtraction
                                            { forextractIncludes        = maybeToList @mbInclude
                                            , forextractEnt             = @nm
                                            , forextractOptIsStatic     = @isStatic
                                            , forextractOptIsPtr        = @asPointer
                                            }
  | * - Id      lhs     .   extr    =   emptyForeignExtraction
%%]

