%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Hylo Fusion
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen) hs module {%{EH}Core.Trf.Fusion} import(Data.Maybe,qualified Data.Set as Set,qualified Data.Map as Map)
%%]

%%[(8 codegen) hs import({%{EH}Core.Trf.Fusion.AbsSynt},{%{EH}Core.Trf.Fusion.HyloParser},{%{EH}Base.Common},{%{EH}Core},{%{EH}Ty}) export(cmodTrfFusion)
%%]


%%[(8 codegen) hs
cmodTrfFusion :: CModule -> CModule
cmodTrfFusion mod = case mod of
                      CModule_Mod n e t -> mod
%%]


