%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Haskell importable interface to AnaDomain subst
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[doesWhat doclatex
Substitution for AnaDomain.
%%]

%%[(8 codegen) hs module {%{EH}AnaDomain.Trf.Subst} import({%{EH}Base.Common},{%{EH}AnaDomain},{%{EH}VarMp})
%%]

%%[(8 codegen) hs import(EH.Util.Utils)
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Wrapping
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen) ag import({AnaDomain/AbsSyn})
WRAPPER TyAGItf QualAGItf CoeAGItf
%%]

%%[(8 codegen) hs export(relevtyAppVarLookup)
relevtyAppVarLookup :: VarLookup m UID RVarMpInfo => m -> RelevTy -> RelevTy
relevtyAppVarLookup varmp ty
  = repl_Syn_TyAGItf t
  where t = wrap_TyAGItf
              (sem_TyAGItf (TyAGItf_AGItf ty))
              (Inh_TyAGItf {rvarLookup_Inh_TyAGItf = varlookupFix varmp})
%%]
relevtyAppVarLookup :: RVarMp -> RelevTy -> RelevTy

%%[(8 codegen) hs export(relevqualAppVarLookup)
relevqualAppVarLookup :: VarLookup m UID RVarMpInfo => m -> RelevQual -> RelevQual
relevqualAppVarLookup varmp qual
  = repl_Syn_QualAGItf t
  where t = wrap_QualAGItf
              (sem_QualAGItf (QualAGItf_AGItf qual))
              (Inh_QualAGItf {rvarLookup_Inh_QualAGItf = varlookupFix varmp})
%%]
relevqualAppVarLookup :: RVarMp -> RelevQual -> RelevQual

%%[(8 codegen) hs export(relevcoeAppVarLookup)
relevcoeAppVarLookup :: VarLookup m UID RVarMpInfo => m -> RelevCoe -> RelevCoe
relevcoeAppVarLookup varmp coe
  = repl_Syn_CoeAGItf t
  where t = wrap_CoeAGItf
              (sem_CoeAGItf (CoeAGItf_AGItf coe))
              (Inh_CoeAGItf {rvarLookup_Inh_CoeAGItf = varlookupFix varmp})
%%]
relevcoeAppVarLookup :: RVarMp -> RelevCoe -> RelevCoe

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% VarMp
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen)
ATTR TyAGItf QualAGItf CoeAGItf AllNT [ rvarLookup: {VarLookupFix UID RVarMpInfo} | | ]
%%]
ATTR TyAGItf QualAGItf CoeAGItf AllNT [ rvarMp: RVarMp | | ]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Replacement
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen)
SEM AnaEval
  | Var             inst    .   repl'       :   AnaEval
                    (loc.replv,loc.isRepl)  =   maybe (@repl,False) (\t -> (t,True)) $ rvmiMbEval $? @lhs.rvarLookup @av
                    inst    .   repl'       =   @replv
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Apply substitution
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen).TySubst
ATTR AllNT     [ | | repl: SELF  		]
ATTR TyAGItf   [ | | repl: RelevTy    	]
ATTR QualAGItf [ | | repl: RelevQual   	]
ATTR CoeAGItf  [ | | repl: RelevCoe   	]
%%]

%%[(8 codegen)
SEM RelevTy
  | Fun				loc		.	rvarLookup	=	varlookupFixDel @quants @lhs.rvarLookup

SEM AnaEval
  | Var             lhs     .   repl        =   if @isRepl
                                                then @repl'.repl
                                                else @repl
%%]

