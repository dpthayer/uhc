%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Gathering of environments (Gam), to be used in other modules
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(50 hmtyinfer)
ATTR AGItf Expr [ | | gathValGam: ValGam ]

SEM Expr
  | Let         loc         .   gathValGam          =   ehcOptTrace @lhs.opts "Expr.Let.lhs.gathValGam" $
                                                        @body.gathValGam `gamUnion` @finValGamDecls
  | * - Let     lhs         .   gathValGam          =   emptyGam

SEM AGItf
  | AGItf       lhs         .   gathValGam          =   ehcOptTrace @lhs.opts "AGItf.lhs.gathValGam" $ @finTyVarMp `varUpd` @expr.gathValGam
%%]

%%[(50 hmtyinfer)
ATTR AGItf Expr [ | | gathTyGam: TyGam ]

SEM Expr
  | Let         lhs         .   gathTyGam           =   ehcOptTrace @lhs.opts "Expr.Let.lhs.gathTyGam" $
                                                        @body.gathTyGam `gamUnion` @lQuTyGam
  | * - Let     lhs         .   gathTyGam           =   emptyGam

SEM AGItf
  | AGItf       lhs         .   gathTyGam           =   ehcOptTrace @lhs.opts "AGItf.lhs.gathTyGam" @expr.gathTyGam
%%]

%%[(50 hmtyinfer)
ATTR AGItf Expr [ | | gathTyKiGam: TyKiGam ]

SEM Expr
  | Let         lhs         .   gathTyKiGam         =   ehcOptTrace @lhs.opts "Expr.Let.lhs.gathTyKiGam" $
                                                        @body.gathTyKiGam `gamUnion` @lQuTyKiGam_ex_subst -- @lQuTyKiGam 
  | * - Let     lhs         .   gathTyKiGam         =   emptyGam

SEM AGItf
  | AGItf       lhs         .   gathTyKiGam         =   ehcOptTrace @lhs.opts "AGItf.lhs.gathTyKiGam" @expr.gathTyKiGam
%%]

%%[(50 hmtyinfer)
ATTR AGItf Expr [ | | gathKiGam: KiGam ]

SEM Expr
  | Let         lhs         .   gathKiGam           =   @body.gathKiGam -- `gamUnion` @xxx
  | * - Let     lhs         .   gathKiGam           =   emptyGam

SEM AGItf
  | AGItf       lhs         .   gathKiGam           =   ehcOptTrace @lhs.opts "AGItf.lhs.gathKiGam" @expr.gathKiGam
%%]

%%[(50 hmtyinfer)
ATTR AGItf Expr [ | | gathClGam: ClGam ]

SEM Expr
  | Let         lhs         .   gathClGam           =   ehcOptTrace @lhs.opts "Expr.Let.lhs.gathClGam" $
                                                        @body.gathClGam `gamUnion` @lClGamNoDups
  | * - Let     lhs         .   gathClGam           =   emptyGam

SEM AGItf
  | AGItf       lhs         .   gathClGam           =   ehcOptTrace @lhs.opts "AGItf.lhs.gathClGam" @expr.gathClGam
%%]

%%[(9 hmtyinfer)
ATTR
  Expr
%%[[50
  AGItf
%%]]
    [ | | gathClDfGam: ClassDefaultGam ]

SEM Expr
  | Let         lhs         .   gathClDfGam         =   ehcOptTrace @lhs.opts "Expr.Let.lhs.gathClDfGam" $
                                                        @body.gathClDfGam `gamUnion` @decls.gathClDfGam
  | * - Let     lhs         .   gathClDfGam         =   emptyGam

SEM AGItf
  | AGItf       lhs         .   gathClDfGam         =   ehcOptTrace @lhs.opts "AGItf.lhs.gathClDfGam" @expr.gathClDfGam
%%]

%%[(50 hmtyinfer)
ATTR AGItf Expr [ | | gathPolGam: PolGam ]

SEM Expr
  | Let         lhs         .   gathPolGam          =   ehcOptTrace @lhs.opts "Expr.Let.lhs.gathPolGam" $
                                                        @body.gathPolGam `gamUnion` @finGathPolGam_extra
  | * - Let     lhs         .   gathPolGam          =   emptyGam

SEM AGItf
  | AGItf       lhs         .   gathPolGam          =   ehcOptTrace @lhs.opts "AGItf.lhs.gathPolGam" @expr.gathPolGam
%%]

