%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Haskell importable interface to Error
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1 hs module {%{AST}Error} import(UU.Pretty,{%{BASE}Common},{%{AST}Ty}) export(Err(..), ErrL, mkNestErr)
%%]

%%[1 import(ErrorAbsSyn)
%%]

%%[9 hs import({%{AST}Core})
%%]

%%[9
DERIVING *     : Show
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Nested error
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1.mkNestErr hs
mkNestErr :: PP_Doc -> ErrL -> ErrL
mkNestErr wher errL | null errL = []
                    | otherwise = [Err_NestedIn wher errL]
%%]
