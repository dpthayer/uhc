%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Abstract syntax for Grin ByteCode
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen grin)
DATA AGItf
  | AGItf       module          : Module

%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Code structure
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen grin)
DATA Module
  | Mod         moduleNm        : {String}
%%[[20
                allImpModNmL	: {AssocL HsName String}
                impModNmL		: {AssocL HsName String}
                expEntryL		: {[EntryInfo]}
%%]]
                allEntryL		: {[EntryInfo]}
                instrs          : Instrs
                stringL			: {[String]}
                constL			: {[Const]}
                cafEntryL		: {[Int]}
                mainCafEntry	: Int
                gcInfoL			: {[GCInfo]}				-- GC info
%%[[94
                includeL		: {[String]}				-- C includes
%%]]

SET AllModule = Module
%%]

%%[(8 codegen grin)
DATA Instr
  | Ld          ind             : InsOp_Deref
  				locDst			: InsOp_LocB
  				locSrc			: InsOp_LocE
  				immSz			: InsOp_ImmSz
  				imm 			: Imm
  | St          ind             : InsOp_DerefB
  				locDst			: InsOp_LocE
  				locSrc			: InsOp_LocB
  				immSz			: InsOp_ImmSz
  				imm 			: Imm
  | LdGlobal	locDst			: InsOp_LocB
                link			: Link
  | LdNodeTag
  | Link		link			: Link
  | AllocStore  locSrc			: InsOp_LocB
  				linkChainEntry	: LinkChainEntry
  | Fetch       locSrc			: InsOp_LocB
  | FetchUpdate	
  | Call        locSrc			: InsOp_LocB
  				callInfo		: CallInfo
  | CallC		nArgSz			: InsOp_ImmSz
  				nArg			: Imm
  				callEnc			: Imm
  				callInfo		: CallInfo
  | RetCall     nArgMineSz		: InsOp_ImmSz
  				nArgSurrSz		: InsOp_ImmSz
  				nArgMine		: Imm
  				nArgSurr		: Imm
  | RetCase     nResSz			: InsOp_ImmSz
  				retOffSurrSz	: InsOp_ImmSz
  				nRes			: Imm
  				retOffSurr		: Imm
  | TailCall    locSrc			: InsOp_LocB
  				nArgMineSz		: InsOp_ImmSz
  				nArgSurrSz		: InsOp_ImmSz
  				nArgMine		: Imm
  				nArgSurr		: Imm
  | CaseCall	
  | Eval        locSrc			: InsOp_LocB
  				callInfo		: CallInfo
  | TailEval    locSrc			: InsOp_LocB
  				nArgSurrSz		: InsOp_ImmSz
  				nArgSurr		: Imm
  | Apply       locSrc			: InsOp_LocB
  				callInfo		: CallInfo
  | Op			op				: InsOp_TyOp
  				opndTy			: InsOp_DataOp
  				locDst			: InsOp_LocODst
  				ind             : InsOp_Deref
  				locSrc			: InsOp_LocOSrc
  				immSz			: InsOp_ImmSz
  				imm 			: Imm
  | Ann			kind            : AnnKind
                ann				: String
  				instr			: Instr
  | Halt
  | Meta		meta			: Meta
  | Label		locRef			: LocRef
  | LabelRef	locRef			: LocRef
  | TagInt2Word
  | UntagWord2Int
  | TagWord2Word
  | UntagWord2Word

DATA Meta
  | CmtHeader	kind            : AnnKind
                ann				: PP_Doc

TYPE Instrs = [Instr]

SET AllInstr = Instr Instrs Meta
%%]
  | CaseCall	nCasesSz		: InsOp_ImmSz
  				nCases			: Imm

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Instruction opcode inline operands, see src/rts/grinbc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/* Location variant: load source, store destination, extensive variant */
%%[(8 codegen grin)
DATA InsOp_LocE
  | SP
  | Reg
  | Imm
  | PC
%%]

/* Location variant: load destination, store source, brief variant */
%%[(8 codegen grin)
DATA InsOp_LocB
  | TOS
  | Reg
%%]

/* Location variant: operator destination */
%%[(8 codegen grin)
DATA InsOp_LocODst
  | TOS
  | Reg
%%]

/* Location variant: operator source */
%%[(8 codegen grin)
DATA InsOp_LocOSrc
  | SP
  | Reg
  | Imm
  | TOS
%%]

/* Operator kind/type */
%%[(8 codegen grin)
DATA InsOp_TyOp
  | Add
  | Sub
  | Mul
  | Quot
%%]

/* Operator data kind/type */
%%[(8 codegen grin)
DATA InsOp_DataOp
  | IntWord
  | IntInf
  | FloatWord
%%]

/* Immediate constant size */
%%[(8 codegen grin)
DATA InsOp_ImmSz
  | Bits08
  | Bits16
  | Bits32
  | Bits64
%%]

/* Indirection level, deref times */
%%[(8 codegen grin)
DATA InsOp_Deref
  | Zero
  | One
  | Two
  | Int
%%]

/* Indirection level, deref times, brief variant */
%%[(8 codegen grin)
DATA InsOp_DerefB
  | One
  | Two
%%]

%%[(8 codegen grin)
SET AllInsOp = InsOp_LocE InsOp_LocB InsOp_LocODst InsOp_LocOSrc InsOp_TyOp InsOp_DataOp InsOp_ImmSz InsOp_Deref InsOp_DerefB
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Inlined immediate
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen grin)
DATA Imm
  | Int			int				: Integer

SET AllImm = Imm
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% SETS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(8 codegen grin)
SET AllNTNoModule = AllInstr AllImm AllInsOp
SET AllNT = AllModule AllNTNoModule
%%]

